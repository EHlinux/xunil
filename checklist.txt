 linux checklist

#read the read me
#write down or take a picture of your user info and passwords

#forensics questions

#get the updates
#install packages for later use
sudo apt-get update
sudo apt-get upgrade
sudo apt-get dist-upgrade
sudo apt-get install htop
sudo apt-get install nmap
sudo apt-get install tmux
sudo apt-get install ufw
sudo apt-get install libpam-cracklib
sudo apt-get install auditd
#delete then redownload for easy points
sudo apt-get purge openssh-server
sudo apt-get install openssh-server
sudo apt-get install bum in
#kill netcat (nc) because its bad
sudo apt-get purge nc 
#sudo apt-get remove (name)

#Desktop updates
#Click the Ubuntu button in
#the menu bar and search for
#Update Manager
#2. Click Settings on the Update
#Manager Screen
#3. To set automatic updates, go
#to the Updates Tab and
#make sure “Automatically
#check for updates” is set to
#“Daily”
#4. After applying the changes,
#install any available updates
#from the main Update
#Manager window


#Follow desktop firewall procedure here in slides 5 and 6
https://s3.amazonaws.com/cpvii/Training+materials/Unit+Eight+-+Ubuntu+Security.pdf

#set up firewall
sudo ufw status verbose
sudo ufw allow port 22
sudo ufw enable
sudo nano ufwfile.txt
#write in nano ufwfile
/etc/default/ufw-Firewall > edit IPV6=yes
/etc/ufw/before.rules
#save
sudo ufw default deny incoming
sudo ufw default allow outgoing
#deny access to bad ports
sudo ufw deny port (port#)
#deny access to IP Address
sudo ufw deny from IPADDRESS (specific IPADDRESS)
#ufw loggins
sudo ufw logging on
sudo ufw logging high
#ufw rules
sudo ufw status numbered
sudo ufw delete (port#)
sudo ufw disable
sudo ufw reset

#file finding navigation command bank
#mkdir            -This makes a directory
#ls               -This changes the file
#cd               -This changes the directory
#pwd              -This shows you which file you're in
#(filename) cwd   -Locate a file
#nano (filename)  -makes nano file
#rm -r (filename) -delete folder/directory
#mv (filename) (directoryname) -move file to new directory
#echo (text)      -repeat text
#locating files     "*(filetype)"
find . -name "*.txt"
#locate .mp3 .mp4 .wav .jpg .jpeg .doc .pdf. .txt
#find the bad files and then delete them
#look at other file types if you see them

#user accounts
#find bad users and delete them
sudo tail /etc/psswd
sudo cat /etc/passwd
userdel (username)
#add user
useradd (username)
#move root for directory
rm -r /home/username
#edit the username of a user
usermod -1 new_username old_username
#disable then enable login
usermod -L (username)
usermod -U (username)
#groups
grep 'sudo' /etc/group
addgroup (groupname)
usermod -a -G (groupname) (username)

#passwords
#change user password
sudo passwd (username)

#guest accounts
# sudo gedit /etc/lightdm/lightdm.conf
# add the following to the end of the lightdm file
# allow-guest=false
#open lightdm.conf in nano
#type sudo /etc/lightdm/lightdm.conf > add "allow-guest=false"
# if line 84 doesn't work do sudo nano/etc/pam.d/common-password
#save and overwrite
sudo restart lightdm

#password policy
# open up the nano this and do /etc/pam.d/common-password > add
#find the line that ends in sha512 and click on the line below it
#+remember=5
#or use slide 12 of https://s3.amazonaws.com/cpvii/Training+materials/Unit+Eight+-+Ubuntu+Security.pdf
#type gedit /etc/pam.d/common-password
#Add “remember=5” to the end of the line that has “pam_unix.so” in it.
#Add “minlen=8” to the end of the line that has “pam_unix.so” in it
#Add “ucredit=-1 lcredit=-1 dcredit=-1 ocredit=-1” to the end of the line with “pam_cracklib.so” in it.
#save and shut
#Type gedit /etc/login.defs
# This is a much longer file. To easily find the section to edit, type Ctrl+F and then “PASS_MAX_AGE”
#Modify the following variables to the same recommended settings used in Windows:
# Maximum Password Duration:
# PASS_MAX_DAYS 90
# Minimum Password Duration:
# PASS_MIN_DAYS 10
# Days Before Expiration to Warn Users
#to Change Their Password:
# PASS_WARN_AGE 7
#save and shut
#Type gedit /etc/pam.d/common-auth
# This file allows you to set an account lockout policy
# Add this line to the end of the file:
#auth required pam_tally2.so deny=5 onerr=fail unlock_time=1800
# Save the file and close it
or
#find the line that ends with pam_cracklib.so and click on the line below it
#+uncredit=-1 lcredit=-1 dcredit=-1 ocredit=-1
#do ctrl + w to find "PASS_" and then write
#/etc/login.defs > defs edit
#+PASS_MAX_DAYS 90
#+PASS_MIN_DAYS 10
#+PASS_WARN_DAYS 7
#find users for password change
#sudo ''passwd (username)
#password must have uppercase, lowercase, numbers, and symbols for 10 characters- write this down!

#auditing
#auditctl -e l
#use this to modify policies with sudo nano gedit /etc/audit/audit.conf
#once bum in is downloaded click on the audit boxes in the GUI 
#questions about bum in check https://s3.amazonaws.com/cpvii/Training+materials/Unit+Eight+-+Ubuntu+Security.pdf slide 22

#ssh configuration- don't use til you figure these out
#/etc/ssh/sshd_config edit
#+Remove insecure Protocol 1
#+PermitRootLogin no
#+PermitEmptyPasswords no
#+X11Forwarding no
#+UsePAM yes

#services- don't use til you figure these out 
#sshd ([ssh])
#telnet ([RDP])
#vsftpd ([FTP Server])
#snmp ([email server])
#pop3 ([email server])
#sendmail ([email server])
#dovecot ([email server])
#icmp ([router protocol])

#general permission- find out where to put these
#chmod -R 744 /home
#chmod -R 444 /var/log
#chmod 440 /etc/passwd
#chmod 440 /etc/shadow
#chmod 440 /etc/group
chmod --- filename
#Permission rights key:
#Put a number for each - 0-7 is rights selection
#- order is owner, group, everyone
#7 - rwx
#6 - rw
#5 - rx
#4 - r
#3 - wx
#2 - w
#1 - x
#0 - - (no rights at all)

# check logs- figure out how these work before using
#faillog -a ([check failed login attempts - displays all users])
#/var/log/message
#/var/log/auth.log
#/var/log/kern.long
#/var/log/cron.log
#/var/log/maillog
#/var/log/boot.log
#/var/log/mysqld.log
#/var/log/secure ([authentication log])


#tmux piping- go through these commands if nessecary
#How to do commands in tmux
ctrl-b <command>
ctrl-b is a prefix
#Split windows into panes/ create panes
ctrl-b % 
#This creates a vertical split
ctrl-b :
split-window
#This creates a horizontal split
#The colon section allows you to use name commands

#Create sessions
tmux new -s (namesession)
#Check on sessions
tmux list-sessions
#Reattach tmux back into regular programm
tmux attach -t (namesession)
tmux ls (or tmux list-sessions)
tmux new -s (session-name)
Ctrl-b d #Detach from session
tmux attach -t [session name]
tmux kill-session -t (session-name)

#Various commands in tmux
Ctrl-b c #Create new window
Ctrl-b d #Detach current client
Ctrl-b l #Move to previously selected window
Ctrl-b n #Move to the next window
Ctrl-b p #Move to the previous window
Ctrl-b & #Kill the current window
Ctrl-b , #Rename the current window
Ctrl-b q #Show pane numbers (used to switch between panes)
Ctrl-b o #Switch to the next pane
Ctrl-b ? #List all keybindings
# moving between windows
Ctrl-b n #(Move to the next window)
Ctrl-b p #(Move to the previous window)
Ctrl-b l #(Move to the previously selected window)
Ctrl-b w #(List all windows / window numbers)
Ctrl-b window number (Move to the specified window number, the default bindings are from 0 -- 9)
# Tiling commands
Ctrl-b % #(Split the window vertically)
CTRL-b " #(Split window horizontally)
Ctrl-b o #(Goto next pane)
Ctrl-b q #(Show pane numbers, when the numbers show up type the key to go to that pane)
Ctrl-b { #(Move the current pane left)
Ctrl-b } #(Move the current pane right)
# Make a pane its own window
Ctrl-b : "break-pane"

#bash- only use if you have to
#Getting output 
(Command) > (filename)
wc -l < (text.file)
#The word count command sends the # of lines in the file to the terminal display. 
(text.file) | wc -1
#Is the same thing put piped
#If statements
(file | command) && command
(text.file | wc -l) && echo “Done!”
() is the first command getting an output
 && is if the () goes through and is good then have the second command go
#Do at least one of the commands
Command 1 || command 2
#Variables
variable=(anything you want)
#Now this variable means something
echo $variable
#Output is variable
#Variables with suffixes
${variable}suffix
${ten}th
#Substitute command for a value
echo “The line count is `wc -l < etc/group` of the etc/shadow file”
#`` is the commands
#Editing Bash scripts
#Make the file
sudo touch (filename)
#Check if successful
ls
#Start editing
chmod +x (filename)
#Show something 
./(filename)
#Source
. (filename)
#Variables
$# -- #number of args that our script was run with
$0 -- #the filename of our script
$1..$n -- #script arguments

#account policy- is last because it could lock you out, but you need to find where to put the command in a nano file
/etc/pam.d/common-auth > add "auth required pam_tally2.so deny=5 oerr=fail unlock_time=1800"
